{"code":"!function(n){var r={};function e(t){if(r[t])return r[t].exports;var o=r[t]={i:t,l:!1,exports:{}};return n[t].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=n,e.c=r,e.d=function(n,r,t){e.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:t})},e.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},e.t=function(n,r){if(1&r&&(n=e(n)),8&r)return n;if(4&r&&\"object\"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:n}),2&r&&\"string\"!=typeof n)for(var o in n)e.d(t,o,function(r){return n[r]}.bind(null,o));return t},e.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(r,\"a\",r),r},e.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},e.p=\"\",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"// ESM COMPAT FLAG\\n__webpack_require__.r(__webpack_exports__);\\n\\n// CONCATENATED MODULE: ./app/core.component.js\\nclass Component {\\r\\n  constructor(config) {\\r\\n    this.components = config.components;\\r\\n    this.template = config.template;\\r\\n    this.selector = config.selector;\\r\\n    this.el = null;\\r\\n  }\\r\\n\\r\\n  start() {\\r\\n    this.components.forEach(this.renderComponent.bind(this));\\r\\n  }\\r\\n\\r\\n  renderComponent(c) {\\r\\n    c.render();\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    this.el = document.querySelector(this.selector);\\r\\n    this.el.innerHTML = this.template;\\r\\n    if (!(this.initComponent === undefined)) this.initComponent();\\r\\n  }\\r\\n}\\r\\n\\r\\n/* harmony default export */ var core_component = (Component);\\r\\n\\n// CONCATENATED MODULE: ./app/overlay.component.js\\n\\r\\n\\r\\n\\r\\nclass overlay_component_Overlay extends Component {\\r\\n  constructor(config){\\r\\n    super(config);\\r\\n    this.iKnow = [];\\r\\n    this.iDontKnow = [];\\r\\n  }\\r\\n\\r\\n  initComponent() {\\r\\n    this.showIntro();\\r\\n    document.querySelector('.intro-btn').addEventListener('click', () => { this.hideIntro(); });\\r\\n  }\\r\\n\\r\\n  drawCorrect(word) {\\r\\n    this.iKnow.push(word.id);\\r\\n    const currentMP3 = `https://raw.githubusercontent.com/Anglehart/rslang-data/master/${word.audioExample}`;\\r\\n    const div = document.createElement('div');\\r\\n    div.classList.add('statsWord');\\r\\n    div.innerHTML = `<p>${word.textExample}</p>`;\\r\\n    document.querySelector('.success').after(div);\\r\\n    div.onclick = () => {\\r\\n      new Audio(currentMP3).play();\\r\\n    };\\r\\n    document.querySelector('.success span').innerHTML = this.iKnow.length;\\r\\n  }\\r\\n\\r\\n  drawInCorrect(word) {\\r\\n    this.iDontKnow.push(word.id);\\r\\n    const currentMP3 = `https://raw.githubusercontent.com/Anglehart/rslang-data/master/${word.audioExample}`;\\r\\n    const div = document.createElement('div');\\r\\n    div.classList.add('statsWord');\\r\\n    div.innerHTML = `<p>${word.textExample}</p>`;\\r\\n    document.querySelector('.errors').after(div);\\r\\n    div.onclick = () => {\\r\\n      new Audio(currentMP3).play();\\r\\n    };\\r\\n    document.querySelector('.errors span').innerHTML = this.iDontKnow.length;\\r\\n  }\\r\\n\\r\\n  showIntro() {\\r\\n    document.querySelector('main').classList.add('disable');\\r\\n    document.querySelector('.intro').classList.remove('disable');\\r\\n  }\\r\\n\\r\\n  hideIntro() {\\r\\n    document.querySelector('main').classList.remove('disable');\\r\\n    document.querySelector('.intro').classList.add('disable');\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n  showResults() {\\r\\n    document.querySelector('main').classList.add('disable');\\r\\n    document.querySelector('.results').classList.remove('disable');\\r\\n  }\\r\\n\\r\\n  hideResults() {\\r\\n    document.querySelector('main').classList.remove('disable');\\r\\n    document.querySelector('.results').classList.add('disable');\\r\\n  }\\r\\n}\\r\\n\\r\\nconst overlay = new overlay_component_Overlay({\\r\\n  selector: '.overlay',\\r\\n  template: '',\\r\\n});\\r\\n/* harmony default export */ var overlay_component = (overlay);\\r\\n\\n// CONCATENATED MODULE: ./app/network.service.js\\n//import storageService from './storage.service';\\r\\n\\r\\nclass NetworkService {\\r\\n  async getDataForRound(round) {\\r\\n    let group = 0;\\r\\n    if (round < 4) {\\r\\n      group = 0;\\r\\n    } else if (round >= 4 && round < 7) {\\r\\n      group = 1;\\r\\n    } else if (round >= 7 && round < 10) {\\r\\n      group = 2;\\r\\n    } else if (round == 10 || round == 11) {\\r\\n      group = 3;\\r\\n    } else if (round === 12 || round === 13) {\\r\\n      group = 4;\\r\\n    } else if (round === 14 || round === 15) {\\r\\n      group = 5;\\r\\n    }\\r\\n    const wordArray = await this.getWords(group);\\r\\n    const definition = await this.wordsAPI(wordArray[0]);\\r\\n    return [wordArray, definition];\\r\\n  }\\r\\n\\r\\n  async wordsAPI(word) {\\r\\n    return fetch(`https://wordsapiv1.p.rapidapi.com/words/${word.word}/definitions`, {\\r\\n    \\t'method': 'GET',\\r\\n    \\t'headers': {\\r\\n    \\t\\t'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com',\\r\\n    \\t\\t'x-rapidapi-key': 'a2e3a10c09msh3a5cbdc010f793fp1b3879jsnaf4c8929aac8'\\r\\n    \\t}\\r\\n    })\\r\\n    .then((response) => response.json())\\r\\n    .then(response => {\\r\\n      return response.definitions[0].definition;\\r\\n    })\\r\\n    .catch(err => {\\r\\n    \\tconsole.log(err);\\r\\n    });\\r\\n  }\\r\\n\\r\\n  async getWords(group) {\\r\\n    const page = this.randomInteger(0, 29);\\r\\n    const url = `https://afternoon-falls-25894.herokuapp.com/words?page=${page}&group=${group}`;\\r\\n    return fetch(url)\\r\\n    .then((response) => {\\r\\n      if (response.ok) return response;\\r\\n    })\\r\\n    .then((response) => response.json())\\r\\n    .then((data) => {\\r\\n      let array = [];\\r\\n      for (let i = 0; i < 4; i += 1) {\\r\\n        const word = data[this.randomInteger(0, 19)];\\r\\n        if (!array.includes(word)) {\\r\\n          array.push(word);\\r\\n        } else {\\r\\n          i -= 1;\\r\\n        }\\r\\n      }\\r\\n      return array;\\r\\n    })\\r\\n    .catch(err => {\\r\\n      console.log(err);\\r\\n    });\\r\\n  }\\r\\n\\r\\n  randomInteger(min, max) {\\r\\n    const rand = min - 0.5 + Math.random() * (max - min + 1);\\r\\n    return Math.round(rand);\\r\\n  }\\r\\n}\\r\\n\\r\\nconst networkService = new NetworkService();\\r\\n/* harmony default export */ var network_service = (networkService);\\r\\n\\n// CONCATENATED MODULE: ./app/rounds.component.js\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nclass rounds_component_Rounds extends Component {\\r\\n  constructor(config) {\\r\\n    super(config);\\r\\n    this.currentRound = 0;\\r\\n    this.currentAnswer = '';\\r\\n  }\\r\\n\\r\\n  drawRounds() {\\r\\n    document.querySelector('.rounds-wrapper').innerHTML = '';\\r\\n    for (let i = 1; i < 16; i += 1) {\\r\\n      const wordRow = document.createElement('div');\\r\\n      wordRow.id = `round${i}`;\\r\\n      wordRow.classList.add('wordRow');\\r\\n      wordRow.innerHTML = `Round №${i}`;\\r\\n      document.querySelector('.rounds-wrapper').append(wordRow);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  changeRound(round) {\\r\\n    document.querySelectorAll('.wordRow').forEach((item) => { item.classList.remove('currentRound') });\\r\\n    document.getElementById(`round${round}`).classList.add('currentRound');\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\nconst rounds = new rounds_component_Rounds({\\r\\n  selector: '.rounds-wrapper',\\r\\n  template: '',\\r\\n});\\r\\n/* harmony default export */ var rounds_component = (rounds);\\r\\n\\n// CONCATENATED MODULE: ./app/game.component.js\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nclass game_component_Game extends Component {\\r\\n  constructor(config) {\\r\\n    super(config);\\r\\n    this.currentRound = 0;\\r\\n    this.currentAnswer = '';\\r\\n  }\\r\\n\\r\\n  initComponent(){\\r\\n    this.startNewGame();\\r\\n    document.querySelector('.new-game-btn').addEventListener('click', () => this.startNewGame());\\r\\n    document.querySelector('.tip-5050').addEventListener('click', () => this.tip5050());\\r\\n    document.querySelector('.tip-expert').addEventListener('click', () => this.tipExpert());\\r\\n    document.querySelector('.tip-lang').addEventListener('click', () => this.tipLang());\\r\\n  }\\r\\n\\r\\n  startNewGame() {\\r\\n    document.querySelector('.new-game-btn').classList.add('disable');\\n    document.querySelector('.win').classList.add('disable');\\r\\n    document.querySelectorAll('.tip').forEach((item) => {\\r\\n      item.classList.remove('used-tip');\\r\\n    })\\r\\n    this.currentRound = 1;\\r\\n    rounds_component.drawRounds();\\r\\n    this.startNewRound();\\r\\n  }\\r\\n\\r\\n  async startNewRound() {\\r\\n    rounds_component.changeRound(this.currentRound);\\r\\n    document.querySelector('.answers').innerHTML = '';\\r\\n    const arr = await network_service.getDataForRound(this.currentRound);\\r\\n    const wordsArray = arr[0];\\r\\n    const question = arr[1];\\r\\n    this.drawQuestion(wordsArray, question);\\r\\n    this.currentRound += 1;\\r\\n    this.currentAnswer = wordsArray[0];\\r\\n  }\\r\\n\\r\\n  drawQuestion(wordsArray, question) {\\r\\n    document.querySelector('.question').innerHTML = question;\\r\\n    wordsArray.forEach((item, i) => {\\r\\n      const option = document.createElement('div');\\r\\n      option.classList.add('option');\\r\\n      option.id = `option${i}`;\\r\\n      option.dataWord = item.word;\\r\\n      option.dataId = item.id;\\r\\n      option.innerHTML = `<span class=\\\"opt-word\\\">${item.word}</span><span class=\\\"opt-trans disable\\\">${item.wordTranslate}</span>`;\\r\\n      option.style.order = network_service.randomInteger(0, 20);\\r\\n      document.querySelector('.answers').append(option);\\r\\n    });\\r\\n    document.querySelectorAll('.option').forEach((item) => {\\r\\n      item.addEventListener('click', () => {\\r\\n        if (event.currentTarget.classList.contains('active-answer')) {\\r\\n          this.checkAnswer(event.currentTarget);\\r\\n        } else {\\r\\n          document.querySelectorAll('.option').forEach((obj) => {\\r\\n            obj.classList.remove('active-answer');\\r\\n          });\\r\\n          event.currentTarget.classList.add('active-answer');\\r\\n        }\\r\\n      })\\r\\n    });\\r\\n  }\\r\\n\\r\\n  checkAnswer(answer) {\\n\\r\\n    document.querySelectorAll('.option').forEach((item) => {\\r\\n      item.style.pointerEvents = 'none';\\r\\n    });\\r\\n\\r\\n    for (let i = 0; i <= 800; i += 200) {\\r\\n      setTimeout(() => { document.getElementById('option0').classList.toggle('correct-answer') }, i);\\r\\n    }\\r\\n    setTimeout(() => {\\r\\n      if (answer.id === 'option0') {\\r\\n        document.querySelector('.currentRound').innerHTML = answer.dataWord;\\r\\n        if(this.currentRound === 16) {\\r\\n          //lib.correct(answer.dataId) - отправка на бэк правильного слова\\r\\n          this.winGame();\\r\\n        } else {\\r\\n          //lib.correct(answer.dataId) - отправка на бэк правильного слова\\r\\n          this.startNewRound();\\r\\n        }\\r\\n      } else {\\r\\n        this.loseGame(answer.dataId);\\r\\n      }\\r\\n    }, 1500);\\r\\n  };\\r\\n\\r\\n  winGame(){\\r\\n    document.querySelectorAll('.option').forEach((obj) => {\\r\\n      obj.style.pointerEvents = 'none';\\r\\n    });\\r\\n    document.querySelector('.new-game-btn').classList.remove('disable');\\r\\n    document.querySelector('.win').classList.remove('disable');\\r\\n  }\\r\\n\\r\\n  loseGame(answerId) {\\r\\n    document.querySelectorAll('.option').forEach((obj) => {\\r\\n      obj.style.pointerEvents = 'none';\\r\\n    });\\r\\n    document.querySelector('.new-game-btn').classList.remove('disable');\\r\\n    console.log(answerId); //отправка на бэк ошибки\\r\\n  }\\r\\n\\r\\n  tip5050() {\\r\\n    document.querySelector('.tip-5050').classList.add('used-tip');\\r\\n    document.getElementById('option2').innerHTML = '';\\r\\n    document.getElementById('option3').innerHTML = '';\\r\\n    document.getElementById('option2').style.pointerEvents = 'none';\\r\\n    document.getElementById('option3').style.pointerEvents = 'none';\\r\\n  }\\r\\n\\r\\n  tipExpert(){\\r\\n    document.querySelector('.tip-expert').classList.add('used-tip');\\r\\n    document.querySelectorAll('.option').forEach((item) => { item.classList.remove('active-answer') })\\r\\n    document.getElementById('option0').classList.add('active-answer');\\r\\n  }\\r\\n\\r\\n  tipLang(){\\r\\n    document.querySelector('.tip-lang').classList.add('used-tip');\\r\\n    document.querySelectorAll('.opt-word').forEach((item) => item.classList.add('disable'));\\r\\n    document.querySelectorAll('.opt-trans').forEach((item) => item.classList.remove('disable'));\\r\\n  }\\r\\n}\\r\\n\\r\\nconst game = new game_component_Game({\\r\\n  selector: '.game-wrapper',\\r\\n  template: '<div class=\\\"question\\\"></div><div class=\\\"answers\\\"></div><div class=\\\"win disable\\\">Congratulations! You won!</div><div class=\\\"new-game-btn disable\\\">New game?</div>',\\r\\n});\\r\\n/* harmony default export */ var game_component = (game);\\r\\n\\n// CONCATENATED MODULE: ./index.js\\n\\r\\n//import overlay from './app/overlay.component';\\r\\n\\r\\n\\r\\n\\r\\nconst component = new Component({\\r\\n  components: [\\r\\n    //overlay,\\r\\n    rounds_component,\\r\\n    game_component,  \\r\\n  ],\\r\\n});\\r\\n\\r\\ncomponent.start();\\r\\n\\n\\n//# sourceURL=webpack:///./index.js_+_5_modules?\")}]);","extractedComments":[]}